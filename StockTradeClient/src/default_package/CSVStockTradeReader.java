package default_package;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.6.3
 * 2017-03-03T20:42:53.537+05:30
 * Generated source version: 2.6.3
 * 
 */
@WebService(targetNamespace = "http://default_package/", name = "CSVStockTradeReader")
@XmlSeeAlso({ObjectFactory.class})
public interface CSVStockTradeReader {

    @WebMethod
    @RequestWrapper(localName = "getMaxVolumeTrade", targetNamespace = "http://default_package/", className = "default_package.GetMaxVolumeTrade")
    @ResponseWrapper(localName = "getMaxVolumeTradeResponse", targetNamespace = "http://default_package/", className = "default_package.GetMaxVolumeTradeResponse")
    @WebResult(name = "return", targetNamespace = "")
    public default_package.StockTrdae getMaxVolumeTrade(
        @WebParam(name = "ada", targetNamespace = "")
        java.util.List<default_package.StockTrdae> ada
    );

    @WebMethod
    @RequestWrapper(localName = "readStockTrades", targetNamespace = "http://default_package/", className = "default_package.ReadStockTrades")
    @ResponseWrapper(localName = "readStockTradesResponse", targetNamespace = "http://default_package/", className = "default_package.ReadStockTradesResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<default_package.StockTrdae> readStockTrades() throws StockTradeInValidFormatException_Exception;

    @WebMethod
    @RequestWrapper(localName = "getMinVolumeTrade", targetNamespace = "http://default_package/", className = "default_package.GetMinVolumeTrade")
    @ResponseWrapper(localName = "getMinVolumeTradeResponse", targetNamespace = "http://default_package/", className = "default_package.GetMinVolumeTradeResponse")
    @WebResult(name = "return", targetNamespace = "")
    public default_package.StockTrdae getMinVolumeTrade(
        @WebParam(name = "arg0", targetNamespace = "")
        java.util.List<default_package.StockTrdae> arg0
    );

    @WebMethod
    @RequestWrapper(localName = "getDailyTradingDifferential", targetNamespace = "http://default_package/", className = "default_package.GetDailyTradingDifferential")
    @ResponseWrapper(localName = "getDailyTradingDifferentialResponse", targetNamespace = "http://default_package/", className = "default_package.GetDailyTradingDifferentialResponse")
    @WebResult(name = "_return", targetNamespace = "")
    public default_package.GetDailyTradingDifferentialResponse.Return getDailyTradingDifferential(
        @WebParam(name = "arg0", targetNamespace = "")
        java.util.List<default_package.StockTrdae> arg0
    );
}
